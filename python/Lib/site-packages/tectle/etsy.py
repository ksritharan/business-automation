from .db import get_connection, get_data_dict
from flask import render_template, url_for, make_response, redirect, session
from .config import load_config
import traceback
import logging
logger = logging.getLogger()

import requests
from requests_oauthlib import OAuth1, OAuth1Session
from urllib.parse import parse_qs
        
def do_etsy():
    context = {}
    
    response = check_etsy_or_redirect()
    if response is None:
        context['url'] = 'www.google.ca'
        response = render_template('etsy.html', **context)
    return response

def do_etsy_callback(request):
    oauth_token = request.args.get('oauth_token', '')
    oauth_verifier = request.args.get('oauth_verifier', '')
    conn = get_connection()
    cur = conn.cursor()
    query = """
            SELECT value
              FROM config
             WHERE key in ('oauth_token_secret')
    """
    cur.execute(query)
    resource_owner_secret = cur.fetchone()[0]
    load_config()
    oauth = OAuth1Session(session['API_KEY'], client_secret=session['SHARED_SECRET'], resource_owner_key=oauth_token, resource_owner_secret=resource_owner_secret, verifier=oauth_verifier)
    data = oauth.fetch_access_token('https://openapi.etsy.com/v2/oauth/access_token')
    response = None
    try:
        query = "DELETE FROM config WHERE key in ('oauth_token', 'oauth_secret')";
        cur.execute(query)
        query = """INSERT INTO config (key, value)
                   VALUES ('oauth_token', '%(oauth_token)s'),
                          ('oauth_secret', '%(oauth_token_secret)s')
        """ % data
        cur.execute(query)
        conn.commit()
        response = redirect('/')
    except Exception as e:
        logger.exception(e)
        response = make_response('failed', 404)
    return response

def check_etsy_or_redirect():
    response = None
    if 'oauth_token' not in session or 'oauth_secret' not in session:
        conn = get_connection()
        cur = conn.cursor()
        query = """
                SELECT key, value
                  FROM config
                 WHERE key in ('oauth_token', 'oauth_secret')
        """
        cur.execute(query)
        rows = cur.fetchall()
        config = {row[0]:row[1] for row in rows}
        if not config['oauth_token'] or not config['oauth_secret']:
            scope = 'transactions_r%20transactions_w%20listings_r'
            url = 'https://openapi.etsy.com/v2/oauth/request_token?scope='+scope
            callback_uri = 'http://127.0.0.1:8080/etsy_callback'
            
            load_config()
            oauth = OAuth1(session['API_KEY'], client_secret=session['SHARED_SECRET'], callback_uri=callback_uri)
            r = requests.post(url=url, auth=oauth)
            credentials = parse_qs(r.content)
            logger.debug(credentials)
            resource_owner_key = credentials.get(b'oauth_token')[0]
            resource_owner_secret = credentials.get(b'oauth_token_secret')[0].decode('utf-8')
            query = "DELETE FROM config WHERE key in ('oauth_token_secret')";
            cur.execute(query)
            query = """INSERT INTO config (key, value)
                       VALUES ('oauth_token_secret', '%s')
            """ % resource_owner_secret
            cur.execute(query)
            conn.commit()
            url_str = credentials[b'login_url'][0].decode('utf-8')
            response = redirect(url_str)
        else:
            session['oauth_token'] = config['oauth_token']
            session['oauth_secret'] = config['oauth_secret']
            logger.info('auth is in database')
    else:
        logger.info('auth is in session')
    return response

def send_etsy_get_request(url):
    if 'oauth_token' not in session or 'oauth_secret' not in session:
        conn = get_connection()
        cur = conn.cursor()
        query = """
                SELECT key, value
                  FROM config
                 WHERE key in ('oauth_token', 'oauth_secret')
        """
        cur.execute(query)
        rows = cur.fetchall()
        config = {row[0]:row[1] for row in rows}
        session['oauth_token'] = config['oauth_token']
        session['oauth_secret'] = config['oauth_secret']
    oauth = OAuth1Session(session['API_KEY'], client_secret=session['SHARED_SECRET'], 
                          resource_owner_key=session['oauth_token'],
                          resource_owner_secret=session['oauth_secret'])
    return oauth.get(url)

def send_etsy_post_request(url, data, headers=None):
    if 'oauth_token' not in session or 'oauth_secret' not in session:
        conn = get_connection()
        cur = conn.cursor()
        query = """
                SELECT key, value
                  FROM config
                 WHERE key in ('oauth_token', 'oauth_secret')
        """
        cur.execute(query)
        rows = cur.fetchall()
        config = {row[0]:row[1] for row in rows}
        session['oauth_token'] = config['oauth_token']
        session['oauth_secret'] = config['oauth_secret']
    oauth = OAuth1Session(session['API_KEY'], client_secret=session['SHARED_SECRET'], 
                          resource_owner_key=session['oauth_token'],
                          resource_owner_secret=session['oauth_secret'])
    if headers:
        oauth.headers.update(headers)
    return oauth.post(url, data=data)