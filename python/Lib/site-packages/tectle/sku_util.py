from .db import get_data_dict

def import_new_skus(cur, skus):
    values = "('%s')" % "','".join(skus)
    query = """
        SELECT sku
          FROM products
         WHERE sku in %s
    """ % values
    cur.execute(query)
    rows = cur.fetchall()
    old_sku = {row[0] for row in rows}
    new_skus = [sku for sku in skus if sku not in old_sku]
    if new_skus:
        query = """
            SELECT *
              FROM package_classes
        """
        rows = get_data_dict(cur, query)
        package_classes = {}
        for row in rows:
            package_classes[row['class']] = row
        insert_data = []
        for sku in new_skus:
            insert_data.append("('%(sku)s', %(design_id)s, '%(category)s', '%(name)s', '%(color)s', %(size)s, '%(bottom)s', %(package_class_id)s)" % get_product_data(sku, package_classes))
        query = """
            INSERT INTO products (sku, design_id, category, name, color, size, bottom, package_class_id)
            VALUES %s
        """ % ',\n'.join(insert_data)
        cur.execute(query)
        
def get_product_data(sku, package_classes):
    #PD750001WTM
    data = {}
    data['sku'] = sku
    category = sku[0]
    if category == 'P':
        data['category'] = 'Planter'
    elif category == 'A':
        data['category'] = 'Accessory'
    else:
        logger.error(sku)
        logger.error(data['category'])
        raise Exception('Invalid category')
        
    size = ord(sku[1]) - ord('A') + 1
    size_decimal = float("0."+sku[2:4])
    data['size'] = size + size_decimal
    
    data['design_id'] = int(sku[4:8])

    if category == 'P':
        if data['design_id'] == 1:
            data['name'] = 'Fractal'
        elif data['design_id'] == 2:
            data['name'] = 'Opal'
        elif data['design_id'] == 3:
            data['name'] = 'Ripple'
        elif data['design_id'] == 4:
            data['name'] = 'Mica'
        elif data['design_id'] == 5:
            data['name'] = 'Pineapple'
        else:
            logger.error(sku)
            logger.error(data['design_id'])
            raise Exception('Invalid design_id')
    elif category == 'A':
        data['name'] = 'WaterPlate'
    
    color = sku[8:10]
    if color == 'WT':
        data['color'] = 'White'
    elif color == 'SB':
        data['color'] = 'Sky Blue'
    elif color == 'BK':
        data['color'] = 'Black'
    else:
        logger.error(sku)
        logger.error(data['color'])
        raise Exception('Invalid color')
        
    if category == 'P':
        bottom = sku[10]
        if bottom == 'M':
            data['bottom'] = 'Mesh'
        elif bottom == 'S':
            data['bottom'] = 'Sealed'
        else:
            logger.error(sku)
            logger.error(data['bottom'])
            raise Exception('Invalid bottom')  
    else:
        data['bottom'] = ''
    
    if category == 'A':
        data['package_class_id'] = 'NULL'
    else:
        if data['size'] < 5:
            data['package_class_id'] = package_classes['Medium']['id']
        elif data['size'] < 9:
            data['package_class_id'] = package_classes['Large']['id']
        elif data['size']:
            data['package_class_id'] = package_classes['XLarge']['id']

    return data