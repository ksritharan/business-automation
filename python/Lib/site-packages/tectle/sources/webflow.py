from .source import Source
from flask import session
from ..config import is_debug
import requests

class Webflow(Source):
    
    def complete_order(self, receipt_id, tracking_pin):
        url = 'https://api.webflow.com/sites/%s/order/%s' % (session['WEBFLOW_SITE_ID'], receipt_id)
        headers = {'accept-version': '1.0.0', 'Authorization': 'Bearer %s' % (session['WEBFLOW_TOKEN'])}
        payload = {
            'fields': {
                'shippingProvider': 'canada-post',
                'shippingTracking': tracking_pin,
            }
        }
        requests.patch(url, json=payload, headers=headers)
        
        url = 'https://api.webflow.com/sites/%s/order/%s/fulfill' % (session['WEBFLOW_SITE_ID'], receipt_id)
        payload = {
            'sendOrderFulfilledEmail': True
        }
        requests.post(url, json=payload, headers=headers)
    
    # private
    
    def fetch_receipts(self):
        num_receipts = 1
        receipts = []
        while num_receipts > 0:
            new_receipts = self.fetch_receipts_helper(len(receipts))
            receipts.extend(new_receipts)
            num_receipts = len(new_receipts)
        return receipts
    
    def format_receipt(self, receipt):
        data = {
            'name': receipt['shippingAddress']['addressee'],
            'receipt_id': receipt['orderId'],
            'first_line': receipt['shippingAddress']['line1'],
            'second_line': receipt['shippingAddress']['line2'],
            'city': receipt['shippingAddress']['city'],
            'state': receipt['shippingAddress']['state'],
            'zip': receipt['shippingAddress']['postalCode'],
            'country': receipt['shippingAddress']['country'],
            'country_id': 209 if receipt['shippingAddress']['country'] == 'US' else 79,
            'buyer_email': receipt['customerInfo']['email'],
            'source': 'Webflow'
        }
        return data
    
    def fetch_receipt_items(self, receipts):
        receipt_items = {}
        for receipt in receipts:
            receipt_items[receipt['orderId']] = self.fetch_receipt_items_helper(receipt)
        return receipt_items
        
    def get_receipt_id(self, receipt):
        return receipt['orderId']
        
    def fetch_receipts_helper(self, offset):
        url = None
        headers = {}
        if not is_debug():
            url = 'https://api.webflow.com/sites/%s/orders?status=unfulfilled&offset=%s' % (session['WEBFLOW_SITE_ID'], offset)
            headers = {'accept-version': '1.0.0', 'Authorization': 'Bearer %s' % (session['WEBFLOW_TOKEN'])}
        else:
            url = 'http://127.0.0.1:8080/sites/orders?limit=100&offset=%s' %(offset)
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        receipts = response.json()
        return receipts
    
    def fetch_receipt_items_helper(self, receipt):
        items = []
        for purchased_items in receipt['purchasedItems']:
            for i in range(purchased_items['count']):
                items.append(purchased_items['variantSKU'])
        return items
        